type B = [8]
type W = [32]
type L = [64]
type Q = [128]

sigma: [6]L
sigma = [
0xA09E667F3BCC908B,
0xB67AE8584CAA73B2,
0xC6EF372FE94F82BE,
0x54FF53A5F1D36F1C,
0x10E527FADE682D1D,
0xB05688C2B3E6C1FD]


s1: [256]B
s1 = [
112, 130,  44, 236, 179,  39, 192, 229, 228, 133,  87,  53, 234,  12, 174,  65,
 35, 239, 107, 147,  69,  25, 165,  33, 237,  14,  79,  78,  29, 101, 146, 189,
134, 184, 175, 143, 124, 235,  31, 206,  62,  48, 220,  95,  94, 197,  11,  26,
166, 225,  57, 202, 213,  71,  93,  61, 217,   1,  90, 214,  81,  86, 108,  77,
139,  13, 154, 102, 251, 204, 176,  45, 116,  18,  43,  32, 240, 177, 132, 153,
223,  76, 203, 194,  52, 126, 118,   5, 109, 183, 169,  49, 209,  23,   4, 215,
 20,  88,  58,  97, 222,  27,  17,  28,  50,  15, 156,  22,  83,  24, 242,  34,
254,  68, 207, 178, 195, 181, 122, 145,  36,   8, 232, 168,  96, 252, 105,  80,
170, 208, 160, 125, 161, 137,  98, 151,  84,  91,  30, 149, 224, 255, 100, 210,
 16, 196,   0,  72, 163, 247, 117, 219, 138,   3, 230, 218,   9,  63, 221, 148,
135,  92, 131,   2, 205,  74, 144,  51, 115, 103, 246, 243, 157, 127, 191, 226,
 82, 155, 216,  38, 200,  55, 198,  59, 129, 150, 111,  75,  19, 190,  99,  46,
233, 121, 167, 140, 159, 110, 188, 142,  41, 245, 249, 182,  47, 253, 180,  89,
120, 152,   6, 106, 231,  70, 113, 186, 212,  37, 171,  66, 136, 162, 141, 250,
114,   7, 185,  85, 248, 238, 172,  10,  54,  73,  42, 104,  60,  56, 241, 164,
 64,  40, 211, 123, 187, 201,  67, 193,  21, 227, 173, 244, 119, 199, 128, 158]

s1f: B -> B
s1f x = (s1 @ x)

s2f: B -> B
s2f x = (s1 @ x) <<< 1


s3f: B -> B
s3f x = (s1 @ x) >>> 1

s4f: B -> B
s4f x = s1 @ (x <<< 1)

Sf: L -> L
Sf x = join[s1f(split`{8}(x)@0), s2f(split`{8}(x)@1), s3f(split`{8}(x)@2), s4f(split`{8}(x)@3), s2f(split`{8}(x)@4), s3f(split`{8}(x)@5), s4f(split`{8}(x)@6), s1f(split`{8}(x)@7)]

P: [8][8]B
P = [
[0,1,1,1,1,0,0,1],
[1,0,1,1,1,1,0,0],
[1,1,0,1,0,1,1,0],
[1,1,1,0,0,0,1,1],
[0,1,1,1,1,1,1,0],
[1,0,1,1,0,1,1,1],
[1,1,0,1,1,0,1,1],
[1,1,1,0,1,1,0,1]]

xorBytes: {n}(fin n) => [n]B -> B
xorBytes x = y ! 0
	where y = [0] # [xi ^ yi | xi <- x | yi <- y]

dotProduct: {n}(fin n) => ([n]B, [n]B) -> B
dotProduct (x, y) = xorBytes [xi*yi | xi <- x | yi <-y]

vecMatMul: {n}(fin n) => ([n][n]B, [n]B) -> [n]B
vecMatMul (x, y) = [dotProduct(xi, y) | xi <- x]

Pf: L -> L
Pf x = join(vecMatMul(P, split`{8}(x)))

F: (L,L) -> L
F (x,k) = Pf(Sf(x^k))

FLyr: (L,L) -> W
FLyr (x,k) = ((split`{2}(x)@0 && split`{2}(k)@0)<<<1) ^ split`{2}(x)@1

FLyl: (L,L) -> W
FLyl (x,k) = (FLyr(x,k) || split`{2}(k)@1) ^ split`{2}(x)@0

FL: (L,L) -> L
FL (x,k) = join[FLyl(x,k),FLyr(x,k)]

FL_1xl: (L,L) -> W
FL_1xl (y,k) = (split`{2}(y)@1 || split`{2}(k)@1) ^ split`{2}(y)@0

FL_1xr: (L,L) -> W
FL_1xr (y,k) = ((FL_1xl(y,k) && split`{2}(k)@0)<<<1) ^ split`{2}(y)@1

FL_1: (L,L) -> L
FL_1 (y,k) = join[FL_1xl(y,k), FL_1xr(y,k)]



